@model CreateQuestViewModel
@{
    ViewData["Title"] = "Create Quest";
}

<h1>Create New Quest</h1>

<div class="row">
    <div class="col-md-8">
        <div asp-validation-summary="All" class="text-danger"></div>
        <form asp-action="Create" method="post">
            <div class="mb-3">
                <label asp-for="Title" class="form-label">Quest Title</label>
                <input asp-for="Title" class="form-control" placeholder="Enter the quest title..." />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Describe the quest, what players can expect, any special requirements..."></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Difficulty" class="form-label">Difficulty</label>
                <select asp-for="Difficulty" class="form-select">
                    <option value="0">Easy</option>
                    <option value="1">Medium</option>
                    <option value="2">Hard</option>
                    <option value="3">Deadly</option>
                </select>
                <span asp-validation-for="Difficulty" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="DungeonMaster.Name" class="form-label">DM Name</label>
                        <input asp-for="DungeonMaster.Name" class="form-control" placeholder="Your name..." />
                        <span asp-validation-for="DungeonMaster.Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="DungeonMaster.Email" class="form-label">DM Email (Optional)</label>
                        <input asp-for="DungeonMaster.Email" type="email" class="form-control" placeholder="your.email@example.com" />
                        <span asp-validation-for="DungeonMaster.Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Proposed Dates & Times</label>
                <div id="proposed-dates">
                    @for (int i = 0; i < Model.ProposedDates.Count; i++)
                    {
                        <div class="mb-3 proposed-date-item">
                            <label class="form-label">Proposed Date @(i + 1)</label>
                            <div class="input-group">
                                <input asp-for="ProposedDates[i]" type="datetime-local" class="form-control" required />
                                @if (i > 0)
                                {
                                    <button type="button" class="btn btn-outline-danger" onclick="removeProposedDate(this)">Remove</button>
                                }
                            </div>
                            <span asp-validation-for="ProposedDates[i]" class="text-danger"></span>
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="addProposedDate()">
                    Add Another Date Option
                </button>
                <div class="form-text">Provide multiple date/time options for players to vote on. At least one date is required.</div>
                <span asp-validation-for="ProposedDates" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Create Quest</button>
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>Quest Creation Tips</h5>
            </div>
            <div class="card-body">
                <ul class="list-unstyled">
                    <li>✓ Provide a clear, engaging title</li>
                    <li>✓ Include difficulty expectations</li>
                    <li>✓ Offer multiple date options</li>
                    <li>✓ Set realistic player limits</li>
                    <li>✓ Include any special requirements</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let dateIndex = @Model.ProposedDates.Count;
        
        function addProposedDate() {
            const container = document.getElementById('proposed-dates');
            const newDateDiv = document.createElement('div');
            newDateDiv.className = 'mb-3 proposed-date-item';
            newDateDiv.innerHTML = `
                <label class="form-label">Proposed Date ${dateIndex + 1}</label>
                <div class="input-group">
                    <input name="ProposedDates[${dateIndex}]" type="datetime-local" class="form-control" required />
                    <button type="button" class="btn btn-outline-danger" onclick="removeProposedDate(this)">Remove</button>
                </div>
            `;
            container.appendChild(newDateDiv);
            dateIndex++;
            updateDateLabels();
        }
        
        function removeProposedDate(button) {
            const dateItem = button.closest('.proposed-date-item');
            dateItem.remove();
            updateDateLabels();
        }
        
        function updateDateLabels() {
            const dateItems = document.querySelectorAll('.proposed-date-item');
            dateItems.forEach((item, index) => {
                const label = item.querySelector('label');
                const input = item.querySelector('input');
                label.textContent = `Proposed Date ${index + 1}`;
                input.name = `ProposedDates[${index}]`;
            });
            dateIndex = dateItems.length;
        }

        // Form validation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const submitButton = document.querySelector('button[type="submit"]');
            
            form.addEventListener('submit', function(e) {
                const dateInputs = document.querySelectorAll('input[type="datetime-local"]');
                let hasValidDate = false;
                
                dateInputs.forEach((input) => {
                    if (input.value) {
                        hasValidDate = true;
                    }
                });
                
                if (!hasValidDate) {
                    e.preventDefault();
                    alert('Please provide at least one proposed date and time.');
                    return false;
                }
                
                submitButton.disabled = true;
                submitButton.textContent = 'Creating Quest...';
            });
        });
    </script>
}