@model PlayerSignup
@{
    ViewData["Title"] = Model.Quest?.Title;
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1 class="mb-0">@Model.Quest?.Title</h1>
                <span class="badge difficulty-@Model.Quest?.Difficulty.ToString().ToLower() fs-6">
                    @Model.Quest?.Difficulty
                </span>
            </div>
            <div class="card-body">
                <p class="lead">@Model.Quest?.Description</p>

                <div class="row mb-3">
                    <div class="col-sm-6">
                        <strong>DM:</strong> @Model.Quest?.DmName
                    </div>
                    <div class="col-sm-6">
                        <strong>Status:</strong>
                        <span class="badge @(Model.Quest?.IsFinalized == true ? "bg-secondary" : "bg-success")">
                            @(Model.Quest?.IsFinalized == true ? "Finalized" : "Open for Signups")
                        </span>
                    </div>
                </div>

                @if (Model.Quest?.IsFinalized == true)
                {
                    <div class="alert alert-info">
                        <h5>Quest Finalized!</h5>
                        <p><strong>Date & Time:</strong> @Model.Quest?.FinalizedDate?.ToString("dddd, MMMM dd, yyyy 'at' h:mm tt")</p>
                        <p><strong>Selected Players:</strong></p>
                        <ul>
                            @foreach (var player in Model.Quest?.PlayerSignups.Where(ps => ps.IsSelected).OrderBy(ps => ps.SignupTime).ToList() ?? [])
                            {
                                <li>@player.PlayerName</li>
                            }
                        </ul>
                        @if (Model.Quest?.PlayerSignups.Where(ps => !ps.IsSelected).Any() == true)
                        {
                            <p><strong>Waitlist:</strong></p>
                            <ul>
                                @foreach (var player in Model.Quest?.PlayerSignups.Where(ps => !ps.IsSelected).OrderBy(ps => ps.SignupTime).ToList() ?? [])
                                {
                                    <li>@player.PlayerName</li>
                                }
                            </ul>
                        }
                    </div>
                }
                else
                {
                    @if (!(bool)ViewBag.IsPlayerSignedUp)
                    {
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5>Sign Up for This Quest</h5>
                            </div>
                            <div class="card-body">
                                <form asp-action="Details" method="post">
                                    <input type="hidden" name="Id" value="0" />
                                    <input type="hidden" name="QuestId" value="@Model.Quest?.Id" />
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="form-label">Your Name</label>
                                                <input name="PlayerName" class="form-control" required placeholder="Enter your name..." />
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label class="form-label">Email (Optional)</label>
                                                <input name="PlayerEmail" type="email" class="form-control" placeholder="your.email@example.com" />
                                            </div>
                                        </div>
                                    </div>

                                    <h6>Vote on Proposed Dates:</h6>
                                    @for (var i = 0; i < Model.DateVotes.Count; i++)
                                    {
                                        var vote = Model.DateVotes[i];
                                        <div class="date-option">
                                            <input type="hidden" name="DateVotes[@i].ProposedDateId" value="@vote.ProposedDateId" />
                                            <input type="hidden" name="DateVotes[@i].PlayerSignupId" value="@vote.PlayerSignupId" />

                                            <div class="d-flex justify-content-between align-items-center">
                                                <strong>@vote.ProposedDate?.Date.ToString("dddd, MMMM dd, yyyy 'at' h:mm tt")</strong>
                                                <div class="vote-summary">
                                                    @{
                                                        var votes = vote.ProposedDate?.PlayerVotes.GroupBy(v => v.Vote).ToDictionary(g => g.Key, g => g.Count()) ?? [];
                                                        var yesCount = votes.GetValueOrDefault(VoteType.Yes, 0);
                                                        var maybeCount = votes.GetValueOrDefault(VoteType.Maybe, 0);
                                                        var noCount = votes.GetValueOrDefault(VoteType.No, 0);
                                                    }
                                                    <span class="text-success">✓ @yesCount</span>
                                                    <span class="text-warning">? @maybeCount</span>
                                                    <span class="text-danger">✗ @noCount</span>
                                                </div>
                                            </div>
                                            <div class="mt-2">
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="DateVotes[@i].Vote" value="2" id="yes_[@i]" required>
                                                    <label class="form-check-label text-success" for="yes_[@i]">Yes</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="DateVotes[@i].Vote" value="1" id="maybe_[@i]">
                                                    <label class="form-check-label text-warning" for="maybe_[@i]">Maybe</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="DateVotes[@i].Vote" value="0" id="no_[@i]">
                                                    <label class="form-check-label text-danger" for="no_[@i]">No</label>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <button type="submit" class="btn btn-primary">Sign Up & Submit Votes</button>
                                </form>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success">
                            <h5>You're signed up!</h5>
                            <p>Thank you for signing up. You'll be notified when the quest is finalized.</p>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>Quest Summary</h5>
            </div>
            <div class="card-body">
                <p><strong>Players Signed Up:</strong> @Model.Quest?.PlayerSignups.Count</p>
                <p><strong>Target Players:</strong> 6</p>
                <p><strong>Created:</strong> @Model.Quest?.CreatedAt.ToString("MMM dd, yyyy")</p>

                @if (Model.Quest?.PlayerSignups.Any() == true)
                {
                    <hr>
                    <h6>Current Signups:</h6>
                    <div class="player-list">
                        @foreach (var signup in Model.Quest?.PlayerSignups.OrderBy(ps => ps.SignupTime).ToList() ?? [])
                        {
                            <div class="d-flex justify-content-between align-items-center py-1">
                                <span>@signup.PlayerName</span>
                                <small class="text-muted">@signup.SignupTime.ToString("MMM dd")</small>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        @if (Model.Quest?.DmName == ViewBag.DmNameForManagement)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h5>DM Controls</h5>
                </div>
                <div class="card-body">
                    <a href="@Url.Action("Manage", "Quest", new { id = Model.QuestId })" class="btn btn-outline-primary btn-sm">
                        Manage Quest
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh every 30 seconds
        setTimeout(function() {
            window.location.reload();
        }, 30000);
    </script>
}