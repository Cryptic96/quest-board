@model MyQuestsViewModel
@using QuestBoard.Service.ViewModels.QuestViewModels
@{
    var tokens = Antiforgery.GetAndStoreTokens(ViewContext.HttpContext);
}

@await Html.PartialAsync("_QuestSection", new QuestSectionViewModel
{
    Title = "Open Quests",
    Icon = "fas fa-clock",
    CollapseTargetId = "openQuests",
    IsExpanded = true,
    Quests = Model.Open,
    EmptyMessage = "No open quests"
})

@await Html.PartialAsync("_QuestSection", new QuestSectionViewModel
{
    Title = "Finalized Quests",
    Icon = "fas fa-check-circle",
    CollapseTargetId = "finalizedQuests",
    IsExpanded = true,
    Quests = Model.Finalized,
    EmptyMessage = "No finalized quests"
})

@await Html.PartialAsync("_QuestSection", new QuestSectionViewModel
{
    Title = "Done Quests",
    Icon = "fas fa-flag-checkered",
    CollapseTargetId = "doneQuests",
    IsExpanded = false,
    Quests = Model.Done,
    EmptyMessage = "No completed quests"
})

<script>
    function deleteQuest(id) {
        if (confirm("Are you sure?")) {
            fetch(`/Quest/Delete/${id}`, {
                method: "DELETE",
                headers: {
                    'RequestVerificationToken': '@tokens.RequestToken'
                }
            }).then(res => {
                if (res.ok) {
                    location.reload();
                } else {
                    alert("Delete failed.");
                }
            });
        }
    }
</script>